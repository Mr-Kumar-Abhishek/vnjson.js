{"version":3,"file":"smart-observe.js","sources":["../src/dep.js","../src/constants.js","../src/util.js","../src/array.js","../src/observe.js","../src/expression.js","../src/batcher.js","../src/watcher.js","../src/index.js"],"sourcesContent":["let uid = 0\n\n/**\n * A dep is an observable that can have multiple\n * watcher subscribing to it.\n */\n\nexport default class Dep {\n  // the current target watcher being evaluated.\n  // this is globally unique because there could be only one\n  // watcher being evaluated at any time.\n  static target = null\n\n  constructor () {\n    this.id = uid++\n    this.subs = []\n  }\n\n  /**\n   * Add a subscriber.\n   *\n   * @param {Watcher} sub\n   */\n\n  addSub (sub) {\n    this.subs.push(sub)\n  }\n\n  /**\n   * Remove a subscriber.\n   *\n   * @param {Watcher} sub\n   */\n\n  removeSub (sub) {\n    this.subs.$remove(sub)\n  }\n\n  /**\n   * Add self as a dependency to the target watcher.\n   */\n\n  depend () {\n    Dep.target.addDep(this)\n  }\n\n  /**\n   * Notify all subscribers of a new value.\n   */\n\n  notify () {\n    const subs = this.subs\n    for (let i = 0, l = subs.length; i < l; i++) {\n      subs[i].update()\n    }\n  }\n}\n","export const OBSERVE_NAME = '__s_o__'\nexport const WATCHERS_PROPERTY_NAME = '__watchers__'\nexport const DATA_PROPTERTY_NAME = '__data__'\n\nexport const DEBUGGING = typeof process !== 'undefined'\n  && process.env.NODE_ENV !== 'production'\n","import {DEBUGGING} from './constants'\n\n/**\n * Define property with value.\n *\n * @param {Object} object\n * @param {String} property\n * @param {*} value\n * @param {Boolean} [enumerable]\n */\n\nexport function defineValue (object, property, value, enumerable) {\n  Object.defineProperty(object, property, {\n    value,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true,\n  })\n}\n\n/**\n * Define property with getter and setter.\n *\n * @param {Object} object\n * @param {String} property\n * @param {Function} getter\n * @param {Function} setter\n */\n\nexport function defineAccessor (object, property, getter, setter) {\n  Object.defineProperty(object, property, {\n    get: getter,\n    set: setter,\n    enumerable: true,\n    configurable: true,\n  })\n}\n\n/**\n * Array type check.\n *\n * @return {Boolean}\n */\n\nexport const isArray = Array.isArray\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} object\n * @return {Boolean}\n */\n\nconst toString = Object.prototype.toString\nconst OBJECT_STRING = '[object Object]'\nexport function isPlainObject (object) {\n  return toString.call(object) === OBJECT_STRING\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} object\n * @return {Boolean}\n */\n\nexport function isObject (object) {\n  return object !== null && typeof object === 'object'\n}\n\n/**\n * Function type check\n *\n * @param {*} func\n * @param {Boolean}\n */\n\nexport function isFunction (func) {\n  return typeof func === 'function'\n}\n\n/**\n * Iterate object\n *\n * @param {Object} object\n * @param {Function} callback\n */\n\nexport function everyEntries (object, callback) {\n  const keys = Object.keys(object)\n  for (let i = 0, l = keys.length; i < l; i++) {\n    callback(keys[i], object[keys[i]])\n  }\n}\n\n/**\n * noop is function which is nothing to do.\n */\n\nexport function noop () {}\n\n/**\n * @param {String} string\n */\n\nexport const warn = typeof DEBUGGING !== undefined && DEBUGGING\n  && typeof console !== 'undefined' && console\n  && isFunction(console.warn)\n    ? console.warn\n    : noop\n\nexport let _Set\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null)\n  }\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined\n  }\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1\n  }\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null)\n  }\n}\n","import {defineValue} from './util'\nimport {OBSERVE_NAME} from './constants'\n\nconst arrayPrototype = Array.prototype\nconst arrayMethods = Object.create(arrayPrototype)\nconst arrayMutativeMethods = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse',\n]\n\n/**\n * Augment an target Array with arrayMethods\n *\n * @param {Array} array\n */\n\nexport default function amend (array) {\n  Object.setPrototypeOf(array, arrayMethods)\n}\n\n/**\n * Intercept mutating methods and emit events\n */\n\nfor (\n  let i = 0, l = arrayMutativeMethods.length, method;\n  i < l;\n  method = arrayMutativeMethods[++i]\n) {\n  // cache original method\n  const original = arrayPrototype[method]\n  defineValue(arrayMethods, method, function mutator (...args) {\n    const result = original.apply(this, args)\n    const observer = this[OBSERVE_NAME]\n    let inserted\n    switch (method) {\n      case 'push':\n        inserted = args\n        break\n      case 'unshift':\n        inserted = args\n        break\n      case 'splice':\n        inserted = args.slice(2)\n        break\n    }\n    if (inserted) observer.observeArray(inserted)\n    observer.dep.notify() // notify change\n    return result\n  })\n}\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} value\n * @return {*} - replaced element\n */\n\nfunction $set (index, value) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1\n  }\n  return this.splice(index, 1, value)[0]\n}\ndefineValue(arrayPrototype, '$set', $set)\n\n/**\n * Convenience method to remove the element at given index\n * or target element reference.\n *\n * @param {*} item\n * @return {*} - removed element\n */\n\nfunction $remove (item) {\n  if (!this.length) return\n  const index = this.indexOf(item)\n  if (index > -1) {\n    return this.splice(index, 1)\n  }\n}\ndefineValue(arrayPrototype, '$remove', $remove)\n","import Dep from './dep'\nimport amendArray from './array'\nimport {\n  defineValue,\n  defineAccessor,\n  isArray,\n  isPlainObject,\n  everyEntries,\n} from './util'\nimport {OBSERVE_NAME} from './constants'\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @class\n * @param {Array|Object} value\n */\n\nclass Observer {\n  constructor (value) {\n    this.value = value\n    this.dep = new Dep()\n    defineValue(value, OBSERVE_NAME, this)\n    if (isArray(value)) {\n      amendArray(value)\n      this.observeArray(value)\n    } else {\n      this.walk(value)\n    }\n  }\n\n  /**\n   * Walk through each property and convert them into\n   * getter/setters. This method should only be called when\n   * value type is Object.\n   *\n   * @param {Object} object\n   */\n\n  walk (object) {\n    everyEntries(object, (key, value) => this.convert(key, value))\n  }\n\n  /**\n   * Observe a list of Array items.\n   *\n   * @param {Array} items\n   */\n\n  observeArray (items) {\n    for (let i = 0, l = items.length; i < l; i++) {\n      observe(items[i])\n    }\n  }\n\n  /**\n   * Convert a property into getter/setter so we can emit\n   * the events when the property is accessed/changed.\n   *\n   * @param {String} key\n   * @param {*} value\n   */\n\n  convert (key, value) {\n    defineReactive(this.value, key, value)\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @return {Observer|undefined}\n */\n\nexport function observe (value) {\n  if (!value || typeof value !== 'object') return\n  let observer\n  if (\n    Object.prototype.hasOwnProperty.call(value, OBSERVE_NAME)\n    && value[OBSERVE_NAME] instanceof Observer\n  ) {\n    observer = value[OBSERVE_NAME]\n  } else if (\n    (isArray(value) || isPlainObject(value))\n    && Object.isExtensible(value)\n  ) {\n    observer = new Observer(value)\n  }\n  return observer\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} object\n * @param {String} key\n * @param {*} value\n */\n\nexport function defineReactive (object, key, value) {\n  const dep = new Dep()\n\n  const desc = Object.getOwnPropertyDescriptor(object, key)\n  if (desc && desc.configurable === false) return\n\n  // cater for pre-defined getter/setters\n  const getter = desc && desc.get\n  const setter = desc && desc.set\n\n  let childOb = observe(value)\n\n  function reactiveGetter () {\n    const currentValue = getter ? getter.call(object) : value\n    if (Dep.target) {\n      dep.depend()\n      if (childOb) {\n        childOb.dep.depend()\n      }\n      if (isArray(currentValue)) {\n        for (let i = 0, l = currentValue.length, e; i < l; i++) {\n          e = currentValue[i]\n          e && e[OBSERVE_NAME] && e[OBSERVE_NAME].dep.depend()\n        }\n      }\n    }\n    return currentValue\n  }\n  function reactiveSetter (newValue) {\n    const oldValue = getter ? getter.call(object) : value\n    if (newValue === oldValue) return\n    if (setter) {\n      setter.call(object, newValue)\n    } else {\n      value = newValue\n    }\n    childOb = observe(newValue)\n    dep.notify()\n  }\n  defineAccessor(object, key, reactiveGetter, reactiveSetter)\n}\n","import {warn} from './util'\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFunction (body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', `return ${body};`)\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    warn('Invalid expression. Generated function body: ' + body)\n  }\n}\n\n/**\n * Parse an expression to getter.\n *\n * @param {String} expression\n * @return {Function|undefined}\n */\n\nexport default function parse (expression) {\n  expression = String.prototype.trim.call(expression)\n  return makeGetterFunction('scope.' + expression)\n}\n","let queue = []\nlet has = {}\nlet waiting = false\nlet queueIndex\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState () {\n  queue = []\n  has = {}\n  waiting = false\n}\n\n/**\n * Flush queue and run the watchers.\n */\n\nfunction flushBatcherQueue () {\n  runBatcherQueue(queue)\n  resetBatcherState()\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue (queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n    const watcher = queue[queueIndex]\n    const id = watcher.id\n    has[id] = null\n    watcher.run()\n  }\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} callback\n * @param {Object} context\n */\n\nconst nextTick = (function () {\n  let callbacks = []\n  let pending = false\n  let timerFunction\n  function nextTickHandler () {\n    pending = false\n    const callbackCopies = callbacks.slice(0)\n    callbacks = []\n    for (let i = 0; i < callbackCopies.length; i++) {\n      callbackCopies[i]()\n    }\n  }\n\n  if (typeof MutationObserver !== 'undefined') {\n    let counter = 1\n    /* global MutationObserver */\n    const observer = new MutationObserver(nextTickHandler)\n    /* global */\n    const textNode = document.createTextNode(counter)\n    observer.observe(textNode, {characterData: true})\n    timerFunction = function () {\n      counter = (counter + 1) % 2\n      textNode.data = counter\n    }\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    const inBrowser = typeof window !== 'undefined'\n      && Object.prototype.toString.call(window) !== '[object Object]'\n    const context =\n      inBrowser ? window : typeof global !== 'undefined' ? global : {}\n    timerFunction = context.setImmediate || setTimeout\n  }\n  return function (callback, context) {\n    const func = context ? function () { callback.call(context) } : callback\n    callbacks.push(func)\n    if (pending) return\n    pending = true\n    timerFunction(nextTickHandler, 0)\n  }\n})()\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nexport default function batch (watcher) {\n  const id = watcher.id\n  if (has[id] == null) {\n    has[id] = queue.length\n    queue.push(watcher)\n    // queue the flush\n    if (!waiting) {\n      waiting = true\n      nextTick(flushBatcherQueue)\n    }\n  }\n}\n","import observe from './index'\nimport Dep from './dep'\nimport parseExpression from './expression'\nimport batch from './batcher'\nimport {\n  isArray,\n  isObject,\n  isFunction,\n  _Set as Set,\n} from './util'\nimport {WATCHERS_PROPERTY_NAME} from './constants'\n\nlet uid = 0\n\nclass Watcher {\n\n  /**\n   * A watcher parses an expression, collects dependencies,\n   * and fires callback when the expression value changes.\n   *\n   * @param {Object} owner\n   * @param {String|Function} getter\n   * @param {Function} callback\n   * @param {Object} options\n   *                 - {Boolean} deep\n   *                 - {Boolean} sync\n   *                 - {Boolean} lazy\n   * @constructor\n   */\n\n  constructor (owner, getter, callback, options) {\n    owner[WATCHERS_PROPERTY_NAME].push(this)\n    this.owner = owner\n    this.getter = getter\n    this.callback = callback\n    this.options = options\n    // uid for batching\n    this.id = ++uid\n    this.active = true\n    // for lazy watchers\n    this.dirty = options.lazy\n    this.deps = []\n    this.newDeps = []\n    this.depIds = new Set()\n    this.newDepIds = new Set()\n    this.value = options.lazy\n      ? undefined\n      : this.get()\n  }\n\n  /**\n   * Evaluate the getter, and re-collect dependencies.\n   */\n\n  get () {\n    this.beforeGet()\n    const scope = this.owner\n    const value = this.getter.call(scope, scope)\n    if (this.options.deep) {\n      traverse(value)\n    }\n    this.afterGet()\n    return value\n  }\n\n  /**\n   * Prepare for dependency collection.\n   */\n\n  beforeGet () {\n    Dep.target = this\n  }\n\n  /**\n   * Add a dependency to this directive.\n   *\n   * @param {Dep} dep\n   */\n\n  addDep (dep) {\n    const id = dep.id\n    if (!this.newDepIds.has(id)) {\n      this.newDepIds.add(id)\n      this.newDeps.push(dep)\n      if (!this.depIds.has(id)) {\n        dep.addSub(this)\n      }\n    }\n  }\n\n  /**\n   * Clean up for dependency collection.\n   */\n\n  afterGet () {\n    Dep.target = null\n    let i = this.deps.length\n    while (i--) {\n      const dep = this.deps[i]\n      if (!this.newDepIds.has(dep.id)) {\n        dep.removeSub(this)\n      }\n    }\n    let tmp = this.depIds\n    this.depIds = this.newDepIds\n    this.newDepIds = tmp\n    this.newDepIds.clear()\n    tmp = this.deps\n    this.deps = this.newDeps\n    this.newDeps = tmp\n    this.newDeps.length = 0\n  }\n\n  /**\n   * Will be called when a dependency changes.\n   */\n\n  update () {\n    if (this.options.lazy) {\n      this.dirty = true\n    } else if (this.options.sync) {\n      this.run()\n    } else {\n      batch(this)\n    }\n  }\n\n  /**\n   * Will be called by the batcher.\n   */\n\n  run () {\n    if (this.active) {\n      const value = this.get()\n      if (\n        value !== this.value\n        // Deep watchers and watchers on Object/Arrays should fire even when\n        // the value is the same, because the value may have mutated;\n        || ((isObject(value) || this.options.deep))\n      ) {\n        const oldValue = this.value\n        this.value = value\n        this.callback.call(this.owner, value, oldValue)\n      }\n    }\n  }\n\n  /**\n   * Evaluate the value of the watcher.\n   * This only gets called for lazy watchers.\n   */\n\n  evaluate () {\n    // avoid overwriting another watcher that is being collected.\n    const current = Dep.target\n    this.value = this.get()\n    this.dirty = false\n    Dep.target = current\n  }\n\n  /**\n   * Depend on all deps collected by this watcher.\n   */\n\n  depend () {\n    let i = this.deps.length\n    while (i--) {\n      this.deps[i].depend()\n    }\n  }\n\n  /**\n   * Remove self from all dependencies' subcriber list.\n   */\n\n  teardown () {\n    if (this.active) {\n      let i = this.deps.length\n      while (i--) {\n        this.deps[i].removeSub(this)\n      }\n      this.active = false\n      this.owner = this.callback = this.value = null\n    }\n  }\n}\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} value\n */\n\nfunction traverse (value) {\n  let i, keys\n  if (isArray(value)) {\n    i = value.length\n    while (i--) traverse(value[i])\n  } else if (isObject(value)) {\n    keys = Object.keys(value)\n    i = keys.length\n    while (i--) traverse(value[keys[i]])\n  }\n}\n\n/**\n * Create an watcher instance, returns the new watcher.\n *\n * @param {Object} owner\n * @param {String|Function} expressionOrFunction\n * @param {Function} callback\n * @param {Object} options\n *                 - {Boolean} deep\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n * @return {Watcher}\n */\n\nexport function watch (owner, expressionOrFunction, callback, options) {\n  // parse expression for getter\n  const getter = isFunction(expressionOrFunction)\n               ? expressionOrFunction\n               : parseExpression(expressionOrFunction)\n  return new Watcher(owner, getter, callback, options)\n}\n\n/**\n * Make a computed getter, which can collect dependencies.\n *\n * @param {Object} owner\n * @param {Function} getter\n */\n\nexport function makeComputed (owner, getter) {\n  const watcher = new Watcher(owner, getter, null, {\n    deep: observe.deep,\n    lazy: true,\n    sync: observe.sync,\n  })\n  return function computedGetter () {\n    if (watcher.options.lazy && Dep.target && !Dep.target.options.lazy) {\n      watcher.options.lazy = false\n      watcher.callback = function () {\n        const deps = watcher.deps\n        for (let i = 0, l = deps.length; i < l; i++) {\n          deps[i].notify()\n        }\n      }\n    }\n    if (watcher.dirty) {\n      watcher.evaluate()\n    }\n    if (Dep.target) {\n      watcher.depend()\n    }\n    return watcher.value\n  }\n}\n","import {\n  observe as doObserve,\n  defineReactive,\n} from './observe'\nimport {\n  watch as doWatch,\n  makeComputed,\n} from './watcher'\nimport {\n  defineValue,\n  defineAccessor,\n  noop,\n  isFunction,\n  everyEntries,\n} from './util'\nimport {\n  WATCHERS_PROPERTY_NAME,\n  DATA_PROPTERTY_NAME,\n} from './constants'\n\n// Only could be react, compute or watch\nobserve.default = watch\nobserve.deep = observe.lazy = observe.sync = false\n\nObject.setPrototypeOf(observe, {react, compute, watch})\n\n/**\n * observe\n *\n * @public\n * @param {Object} target\n * @param {*} [expression]\n * @param {*} [func]\n * @param {*} [options]\n * @return {Function} observe\n */\n\nexport default function observe (target, expression, func, options) {\n  if (!target.hasOwnProperty(WATCHERS_PROPERTY_NAME)) {\n    init(target)\n  }\n  return observe.default(target, expression, func, options)\n}\n\n/**\n * React options\n *\n * @public\n * @param {Object} options\n * @param {Object} [target]\n * @return {Function} observe\n */\n\nfunction react (options, target) {\n  if (target) {\n    if (!target.hasOwnProperty(WATCHERS_PROPERTY_NAME)) {\n      init(target)\n    }\n  } else {\n    target = {}\n    init(target)\n  }\n  options.methods && carryMethods(target, options.methods)\n  options.data && reactProperties(target, options.data)\n  options.computed && computeProperties(target, options.computed)\n  options.watchers && watchProperties(target, options.watchers)\n  return target\n}\n\n/**\n * Compute property\n *\n * @public\n * @param {Object} target\n * @param {String} name\n * @param {Function|Object} getterOrAccessor\n *        - Function getter\n *        - Object accessor\n *          - Function [get]  - getter\n *          - Function [set]  - setter\n *          - Boolean [cache]\n * @param {Boolean} [cache]\n */\n\nfunction compute (target, name, getterOrAccessor, cache) {\n  if (!target.hasOwnProperty(WATCHERS_PROPERTY_NAME)) {\n    init(target)\n  }\n  let getter, setter\n  if (isFunction(getterOrAccessor)) {\n    getter = cache !== false\n            ? makeComputed(target, getterOrAccessor)\n            : getterOrAccessor.bind(this)\n    setter = noop\n  } else {\n    getter = getterOrAccessor.get\n            ? getterOrAccessor.cache !== false || cache !== false\n              ? makeComputed(target, getterOrAccessor.get)\n              : getterOrAccessor.get.bind(this)\n            : noop\n    setter = getterOrAccessor.set ? getterOrAccessor.set.bind(this) : noop\n  }\n  defineAccessor(target, name, getter, setter)\n}\n\n/**\n * Watch property\n *\n * @public\n * @param {Object} target\n * @param {String|Function} expressionOrFunction\n * @param {Function} callback\n * @param {Object} [options]\n *                 - {Boolean} deep\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n * @return {Watcher}\n */\n\nfunction watch (target, expressionOrFunction, callback, options = observe) {\n  if (!target.hasOwnProperty(WATCHERS_PROPERTY_NAME)) {\n    init(target)\n  }\n  return doWatch(target, expressionOrFunction, callback, options)\n}\n\n/**\n * @private\n * @param {Object} target\n */\n\nfunction init (target) {\n  defineValue(target, WATCHERS_PROPERTY_NAME, [], false)\n  defineValue(target, DATA_PROPTERTY_NAME, Object.create(null), false)\n  doObserve(target[DATA_PROPTERTY_NAME])\n  reactSelfProperties(target)\n}\n\n/**\n * @private\n * @param {Object} target\n * @param {Object} methods\n */\n\nfunction carryMethods (target, methods) {\n  everyEntries(methods, (name, method) => {\n    target[name] = method.bind(target)\n  })\n}\n\n/**\n * @private\n * @param {Object} target\n * @param {String} key\n * @param {*} value\n */\n\nfunction reactProperty (target, key, value) {\n  target[DATA_PROPTERTY_NAME][key] = value\n  defineReactive(target[DATA_PROPTERTY_NAME], key, value)\n  proxy(target, key)\n}\n\n/**\n * @private\n * @param {Object} target\n * @param {Object} properties\n */\n\nfunction reactProperties (target, properties) {\n  everyEntries(properties, (key, value) => reactProperty(target, key, value))\n}\n\n/**\n * @private\n * @param {Object} target\n */\n\nfunction reactSelfProperties (target) {\n  everyEntries(target, (key, value) => {\n    !isFunction(value) && reactProperty(target, key, value)\n  })\n}\n\n/**\n * @private\n * @param {Object} target\n * @param {Object} properties\n */\n\nfunction computeProperties (target, properties) {\n  everyEntries(properties, (key, value) => compute(target, key, value))\n}\n\n/**\n * @private\n * @param {Object} target\n * @param {Object} properties\n */\n\nfunction watchProperties (target, properties) {\n  everyEntries(properties, (expression, functionOrOption) => {\n    if (isFunction(functionOrOption)) {\n      watch(target, expression, functionOrOption)\n    } else {\n      watch(target, expression, functionOrOption.watcher, functionOrOption)\n    }\n  })\n}\n\n/**\n * @private\n * @param {Object} target\n * @param {String} key\n */\n\nfunction proxy (target, key) {\n  function getter () {\n    return target[DATA_PROPTERTY_NAME][key]\n  }\n  function setter (value) {\n    target[DATA_PROPTERTY_NAME][key] = value\n  }\n  defineAccessor(target, key, getter, setter)\n}\n"],"names":["uid","Dep","id","subs","sub","push","$remove","target","addDep","i","l","length","update","OBSERVE_NAME","WATCHERS_PROPERTY_NAME","DATA_PROPTERTY_NAME","DEBUGGING","process","env","NODE_ENV","defineValue","object","property","value","enumerable","defineProperty","defineAccessor","getter","setter","isArray","Array","toString","Object","prototype","OBJECT_STRING","isPlainObject","call","isObject","isFunction","func","everyEntries","callback","keys","noop","warn","undefined","console","_Set","Set","match","set","create","has","key","add","clear","arrayPrototype","arrayMethods","arrayMutativeMethods","amend","array","setPrototypeOf","method","original","mutator","args","result","apply","observer","inserted","slice","observeArray","dep","notify","$set","index","Number","splice","item","indexOf","Observer","walk","convert","items","observe","hasOwnProperty","isExtensible","defineReactive","desc","getOwnPropertyDescriptor","configurable","get","childOb","reactiveGetter","currentValue","depend","e","reactiveSetter","newValue","oldValue","makeGetterFunction","body","Function","parse","expression","String","trim","queue","waiting","queueIndex","resetBatcherState","flushBatcherQueue","runBatcherQueue","watcher","run","nextTick","callbacks","pending","timerFunction","nextTickHandler","callbackCopies","MutationObserver","counter","textNode","document","createTextNode","characterData","data","inBrowser","window","context","global","setImmediate","setTimeout","batch","Watcher","owner","options","active","dirty","lazy","deps","newDeps","depIds","newDepIds","beforeGet","scope","deep","afterGet","addSub","removeSub","tmp","sync","current","traverse","watch","expressionOrFunction","parseExpression","makeComputed","computedGetter","evaluate","default","react","compute","methods","carryMethods","reactProperties","computed","computeProperties","watchers","watchProperties","name","getterOrAccessor","cache","bind","doWatch","init","reactProperty","properties","reactSelfProperties","functionOrOption","proxy"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,MAAM,CAAV;;;;;;;IAOqBC;iBAMJ;;;SACRC,EAAL,GAAUF,KAAV;SACKG,IAAL,GAAY,EAAZ;;;;;;;;;;;;;;;;2BASMC,KAAK;WACND,IAAL,CAAUE,IAAV,CAAeD,GAAf;;;;;;;;;;;8BASSA,KAAK;WACTD,IAAL,CAAUG,OAAV,CAAkBF,GAAlB;;;;;;;;;6BAOQ;UACJG,MAAJ,CAAWC,MAAX,CAAkB,IAAlB;;;;;;;;;6BAOQ;UACFL,OAAO,KAAKA,IAAlB;WACK,IAAIM,IAAI,CAAR,EAAWC,IAAIP,KAAKQ,MAAzB,EAAiCF,IAAIC,CAArC,EAAwCD,GAAxC,EAA6C;aACtCA,CAAL,EAAQG,MAAR;;;;;;;AA9CeX,IAIZM,SAAS;;ACXX,IAAMM,eAAe,SAArB;AACP,AAAO,IAAMC,yBAAyB,cAA/B;AACP,AAAO,IAAMC,sBAAsB,UAA5B;;AAEP,AAAO,IAAMC,YAAY,OAAOC,OAAP,KAAmB,WAAnB,IACpBA,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YADvB;;ACFP;;;;;;;;;AASA,AAAO,SAASC,WAAT,CAAsBC,MAAtB,EAA8BC,QAA9B,EAAwCC,KAAxC,EAA+CC,UAA/C,EAA2D;SACzDC,cAAP,CAAsBJ,MAAtB,EAA8BC,QAA9B,EAAwC;gBAAA;gBAE1B,CAAC,CAACE,UAFwB;cAG5B,IAH4B;kBAIxB;GAJhB;;;;;;;;;;;;AAiBF,AAAO,SAASE,cAAT,CAAyBL,MAAzB,EAAiCC,QAAjC,EAA2CK,MAA3C,EAAmDC,MAAnD,EAA2D;SACzDH,cAAP,CAAsBJ,MAAtB,EAA8BC,QAA9B,EAAwC;SACjCK,MADiC;SAEjCC,MAFiC;gBAG1B,IAH0B;kBAIxB;GAJhB;;;;;;;;;AAcF,AAAO,IAAMC,UAAUC,MAAMD,OAAtB;;;;;;;;;;AAUP,IAAME,WAAWC,OAAOC,SAAP,CAAiBF,QAAlC;AACA,IAAMG,gBAAgB,iBAAtB;AACA,AAAO,SAASC,aAAT,CAAwBd,MAAxB,EAAgC;SAC9BU,SAASK,IAAT,CAAcf,MAAd,MAA0Ba,aAAjC;;;;;;;;;;;;AAYF,AAAO,SAASG,QAAT,CAAmBhB,MAAnB,EAA2B;SACzBA,WAAW,IAAX,IAAmB,QAAOA,MAAP,yCAAOA,MAAP,OAAkB,QAA5C;;;;;;;;;;AAUF,AAAO,SAASiB,UAAT,CAAqBC,IAArB,EAA2B;SACzB,OAAOA,IAAP,KAAgB,UAAvB;;;;;;;;;;AAUF,AAAO,SAASC,YAAT,CAAuBnB,MAAvB,EAA+BoB,QAA/B,EAAyC;MACxCC,OAAOV,OAAOU,IAAP,CAAYrB,MAAZ,CAAb;OACK,IAAIZ,IAAI,CAAR,EAAWC,IAAIgC,KAAK/B,MAAzB,EAAiCF,IAAIC,CAArC,EAAwCD,GAAxC,EAA6C;aAClCiC,KAAKjC,CAAL,CAAT,EAAkBY,OAAOqB,KAAKjC,CAAL,CAAP,CAAlB;;;;;;;;AAQJ,AAAO,SAASkC,IAAT,GAAiB;;;;;;AAMxB,AAAO,IAAMC,OAAO,QAAO5B,SAAP,yCAAOA,SAAP,OAAqB6B,SAArB,IAAkC7B,SAAlC,IACf,OAAO8B,OAAP,KAAmB,WADJ,IACmBA,OADnB,IAEfR,WAAWQ,QAAQF,IAAnB,CAFe,GAGdE,QAAQF,IAHM,GAIdD,IAJC;;AAMP,AAAO,IAAII,aAAJ;AACP,IAAI,OAAOC,GAAP,KAAe,WAAf,IAA8BA,IAAIjB,QAAJ,GAAekB,KAAf,CAAqB,aAArB,CAAlC,EAAuE;;SAE9DD,GAAP;CAFF,MAGO;;SAEE,gBAAY;SACZE,GAAL,GAAWlB,OAAOmB,MAAP,CAAc,IAAd,CAAX;GADF;OAGKlB,SAAL,CAAemB,GAAf,GAAqB,UAAUC,GAAV,EAAe;WAC3B,KAAKH,GAAL,CAASG,GAAT,MAAkBR,SAAzB;GADF;OAGKZ,SAAL,CAAeqB,GAAf,GAAqB,UAAUD,GAAV,EAAe;SAC7BH,GAAL,CAASG,GAAT,IAAgB,CAAhB;GADF;OAGKpB,SAAL,CAAesB,KAAf,GAAuB,YAAY;SAC5BL,GAAL,GAAWlB,OAAOmB,MAAP,CAAc,IAAd,CAAX;GADF;;;AC9HF,IAAMK,iBAAiB1B,MAAMG,SAA7B;AACA,IAAMwB,eAAezB,OAAOmB,MAAP,CAAcK,cAAd,CAArB;AACA,IAAME,uBAAuB,CAC3B,MAD2B,EAE3B,KAF2B,EAG3B,OAH2B,EAI3B,SAJ2B,EAK3B,QAL2B,EAM3B,MAN2B,EAO3B,SAP2B,CAA7B;;;;;;;;AAgBA,AAAe,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;SAC7BC,cAAP,CAAsBD,KAAtB,EAA6BH,YAA7B;;;;;;;2BAQIhD,GAAOC,GAAiCoD;;MAKtCC,WAAWP,eAAeM,MAAf,CAAjB;cACYL,YAAZ,EAA0BK,MAA1B,EAAkC,SAASE,OAAT,GAA2B;sCAANC,IAAM;UAAA;;;QACrDC,SAASH,SAASI,KAAT,CAAe,IAAf,EAAqBF,IAArB,CAAf;QACMG,WAAW,KAAKvD,YAAL,CAAjB;QACIwD,iBAAJ;YACQP,MAAR;WACO,MAAL;mBACaG,IAAX;;WAEG,SAAL;mBACaA,IAAX;;WAEG,QAAL;mBACaA,KAAKK,KAAL,CAAW,CAAX,CAAX;;;QAGAD,QAAJ,EAAcD,SAASG,YAAT,CAAsBF,QAAtB;aACLG,GAAT,CAAaC,MAAb,GAhB2D;WAiBpDP,MAAP;GAjBF;;;AAPF,KACE,IAAIzD,IAAI,CAAR,EAAWC,IAAIgD,qBAAqB/C,MAApC,EAA4CmD,MAD9C,EAEErD,IAAIC,CAFN,EAGEoD,SAASJ,qBAAqB,EAAEjD,CAAvB,CAHX,EAIE;QAHIA,CAGJ,EAHWC,CAGX,EAH4CoD,MAG5C;;;;;;;;;;;;AAiCF,SAASY,IAAT,CAAeC,KAAf,EAAsBpD,KAAtB,EAA6B;MACvBoD,SAAS,KAAKhE,MAAlB,EAA0B;SACnBA,MAAL,GAAciE,OAAOD,KAAP,IAAgB,CAA9B;;SAEK,KAAKE,MAAL,CAAYF,KAAZ,EAAmB,CAAnB,EAAsBpD,KAAtB,EAA6B,CAA7B,CAAP;;AAEFH,YAAYoC,cAAZ,EAA4B,MAA5B,EAAoCkB,IAApC;;;;;;;;;;AAUA,SAASpE,OAAT,CAAkBwE,IAAlB,EAAwB;MAClB,CAAC,KAAKnE,MAAV,EAAkB;MACZgE,QAAQ,KAAKI,OAAL,CAAaD,IAAb,CAAd;MACIH,QAAQ,CAAC,CAAb,EAAgB;WACP,KAAKE,MAAL,CAAYF,KAAZ,EAAmB,CAAnB,CAAP;;;AAGJvD,YAAYoC,cAAZ,EAA4B,SAA5B,EAAuClD,OAAvC;;AC9EA;;;;;;;;;;IAUM0E;oBACSzD,KAAb,EAAoB;;;SACbA,KAAL,GAAaA,KAAb;SACKiD,GAAL,GAAW,IAAIvE,GAAJ,EAAX;gBACYsB,KAAZ,EAAmBV,YAAnB,EAAiC,IAAjC;QACIgB,QAAQN,KAAR,CAAJ,EAAoB;YACPA,KAAX;WACKgD,YAAL,CAAkBhD,KAAlB;KAFF,MAGO;WACA0D,IAAL,CAAU1D,KAAV;;;;;;;;;;;;;;yBAYEF,QAAQ;;;mBACCA,MAAb,EAAqB,UAACgC,GAAD,EAAM9B,KAAN;eAAgB,MAAK2D,OAAL,CAAa7B,GAAb,EAAkB9B,KAAlB,CAAhB;OAArB;;;;;;;;;;;iCASY4D,OAAO;WACd,IAAI1E,IAAI,CAAR,EAAWC,IAAIyE,MAAMxE,MAA1B,EAAkCF,IAAIC,CAAtC,EAAyCD,GAAzC,EAA8C;kBACpC0E,MAAM1E,CAAN,CAAR;;;;;;;;;;;;;;4BAYK4C,KAAK9B,OAAO;qBACJ,KAAKA,KAApB,EAA2B8B,GAA3B,EAAgC9B,KAAhC;;;;;;;;;;;;;;;AAaJ,AAAO,SAAS6D,SAAT,CAAkB7D,KAAlB,EAAyB;MAC1B,CAACA,KAAD,IAAU,QAAOA,KAAP,yCAAOA,KAAP,OAAiB,QAA/B,EAAyC;MACrC6C,iBAAJ;MAEEpC,OAAOC,SAAP,CAAiBoD,cAAjB,CAAgCjD,IAAhC,CAAqCb,KAArC,EAA4CV,YAA5C,KACGU,MAAMV,YAAN,aAA+BmE,QAFpC,EAGE;eACWzD,MAAMV,YAAN,CAAX;GAJF,MAKO,IACL,CAACgB,QAAQN,KAAR,KAAkBY,cAAcZ,KAAd,CAAnB,KACGS,OAAOsD,YAAP,CAAoB/D,KAApB,CAFE,EAGL;eACW,IAAIyD,QAAJ,CAAazD,KAAb,CAAX;;SAEK6C,QAAP;;;;;;;;;;;AAWF,AAAO,SAASmB,cAAT,CAAyBlE,MAAzB,EAAiCgC,GAAjC,EAAsC9B,KAAtC,EAA6C;MAC5CiD,MAAM,IAAIvE,GAAJ,EAAZ;;MAEMuF,OAAOxD,OAAOyD,wBAAP,CAAgCpE,MAAhC,EAAwCgC,GAAxC,CAAb;MACImC,QAAQA,KAAKE,YAAL,KAAsB,KAAlC,EAAyC;;;MAGnC/D,SAAS6D,QAAQA,KAAKG,GAA5B;MACM/D,SAAS4D,QAAQA,KAAKtC,GAA5B;;MAEI0C,UAAUR,UAAQ7D,KAAR,CAAd;;WAESsE,cAAT,GAA2B;QACnBC,eAAenE,SAASA,OAAOS,IAAP,CAAYf,MAAZ,CAAT,GAA+BE,KAApD;QACItB,IAAIM,MAAR,EAAgB;UACVwF,MAAJ;UACIH,OAAJ,EAAa;gBACHpB,GAAR,CAAYuB,MAAZ;;UAEElE,QAAQiE,YAAR,CAAJ,EAA2B;aACpB,IAAIrF,IAAI,CAAR,EAAWC,IAAIoF,aAAanF,MAA5B,EAAoCqF,CAAzC,EAA4CvF,IAAIC,CAAhD,EAAmDD,GAAnD,EAAwD;cAClDqF,aAAarF,CAAb,CAAJ;eACKuF,EAAEnF,YAAF,CAAL,IAAwBmF,EAAEnF,YAAF,EAAgB2D,GAAhB,CAAoBuB,MAApB,EAAxB;;;;WAICD,YAAP;;WAEOG,cAAT,CAAyBC,QAAzB,EAAmC;QAC3BC,WAAWxE,SAASA,OAAOS,IAAP,CAAYf,MAAZ,CAAT,GAA+BE,KAAhD;QACI2E,aAAaC,QAAjB,EAA2B;QACvBvE,MAAJ,EAAY;aACHQ,IAAP,CAAYf,MAAZ,EAAoB6E,QAApB;KADF,MAEO;cACGA,QAAR;;cAEQd,UAAQc,QAAR,CAAV;QACIzB,MAAJ;;iBAEapD,MAAf,EAAuBgC,GAAvB,EAA4BwC,cAA5B,EAA4CI,cAA5C;;;AC9IF;;;;;;;;;;AAUA,SAASG,kBAAT,CAA6BC,IAA7B,EAAmC;MAC7B;;WAEK,IAAIC,QAAJ,CAAa,OAAb,cAAgCD,IAAhC,OAAP;;GAFF,CAIE,OAAOL,CAAP,EAAU;SACL,kDAAkDK,IAAvD;;;;;;;;;;;AAWJ,AAAe,SAASE,KAAT,CAAgBC,UAAhB,EAA4B;eAC5BC,OAAOxE,SAAP,CAAiByE,IAAjB,CAAsBtE,IAAtB,CAA2BoE,UAA3B,CAAb;SACOJ,mBAAmB,WAAWI,UAA9B,CAAP;;;AC/BF,IAAIG,QAAQ,EAAZ;AACA,IAAIvD,MAAM,EAAV;AACA,IAAIwD,UAAU,KAAd;AACA,IAAIC,mBAAJ;;;;;;AAMA,SAASC,iBAAT,GAA8B;UACpB,EAAR;QACM,EAAN;YACU,KAAV;;;;;;;AAOF,SAASC,iBAAT,GAA8B;kBACZJ,KAAhB;;;;;;;;;;AAUF,SAASK,eAAT,CAA0BL,KAA1B,EAAiC;;;OAG1BE,aAAa,CAAlB,EAAqBA,aAAaF,MAAMhG,MAAxC,EAAgDkG,YAAhD,EAA8D;QACtDI,UAAUN,MAAME,UAAN,CAAhB;QACM3G,KAAK+G,QAAQ/G,EAAnB;QACIA,EAAJ,IAAU,IAAV;YACQgH,GAAR;;;;;;;;;;;;;;AAcJ,IAAMC,WAAY,YAAY;MACxBC,YAAY,EAAhB;MACIC,UAAU,KAAd;MACIC,sBAAJ;WACSC,eAAT,GAA4B;cAChB,KAAV;QACMC,iBAAiBJ,UAAU9C,KAAV,CAAgB,CAAhB,CAAvB;gBACY,EAAZ;SACK,IAAI7D,IAAI,CAAb,EAAgBA,IAAI+G,eAAe7G,MAAnC,EAA2CF,GAA3C,EAAgD;qBAC/BA,CAAf;;;;MAIA,OAAOgH,gBAAP,KAA4B,WAAhC,EAA6C;;UACvCC,UAAU,CAAd;;UAEMtD,WAAW,IAAIqD,gBAAJ,CAAqBF,eAArB,CAAjB;;UAEMI,WAAWC,SAASC,cAAT,CAAwBH,OAAxB,CAAjB;eACStC,OAAT,CAAiBuC,QAAjB,EAA2B,EAACG,eAAe,IAAhB,EAA3B;sBACgB,yBAAY;kBAChB,CAACJ,UAAU,CAAX,IAAgB,CAA1B;iBACSK,IAAT,GAAgBL,OAAhB;OAFF;;GAPF,MAWO;;;;QAICM,YAAY,OAAOC,MAAP,KAAkB,WAAlB,IACbjG,OAAOC,SAAP,CAAiBF,QAAjB,CAA0BK,IAA1B,CAA+B6F,MAA/B,MAA2C,iBADhD;QAEMC,UACJF,YAAYC,MAAZ,GAAqB,OAAOE,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,EADhE;oBAEgBD,QAAQE,YAAR,IAAwBC,UAAxC;;SAEK,UAAU5F,QAAV,EAAoByF,OAApB,EAA6B;QAC5B3F,OAAO2F,UAAU,YAAY;eAAW9F,IAAT,CAAc8F,OAAd;KAAxB,GAAmDzF,QAAhE;cACUpC,IAAV,CAAekC,IAAf;QACI8E,OAAJ,EAAa;cACH,IAAV;kBACcE,eAAd,EAA+B,CAA/B;GALF;CAlCe,EAAjB;;;;;;;;;;;;;AAsDA,AAAe,SAASe,KAAT,CAAgBrB,OAAhB,EAAyB;MAChC/G,KAAK+G,QAAQ/G,EAAnB;MACIkD,IAAIlD,EAAJ,KAAW,IAAf,EAAqB;QACfA,EAAJ,IAAUyG,MAAMhG,MAAhB;UACMN,IAAN,CAAW4G,OAAX;;QAEI,CAACL,OAAL,EAAc;gBACF,IAAV;eACSG,iBAAT;;;;;ACrGN,IAAI/G,QAAM,CAAV;;IAEMuI;;;;;;;;;;;;;;;;mBAgBSC,KAAb,EAAoB7G,MAApB,EAA4Bc,QAA5B,EAAsCgG,OAAtC,EAA+C;;;UACvC3H,sBAAN,EAA8BT,IAA9B,CAAmC,IAAnC;SACKmI,KAAL,GAAaA,KAAb;SACK7G,MAAL,GAAcA,MAAd;SACKc,QAAL,GAAgBA,QAAhB;SACKgG,OAAL,GAAeA,OAAf;;SAEKvI,EAAL,GAAU,EAAEF,KAAZ;SACK0I,MAAL,GAAc,IAAd;;SAEKC,KAAL,GAAaF,QAAQG,IAArB;SACKC,IAAL,GAAY,EAAZ;SACKC,OAAL,GAAe,EAAf;SACKC,MAAL,GAAc,IAAI/F,IAAJ,EAAd;SACKgG,SAAL,GAAiB,IAAIhG,IAAJ,EAAjB;SACKzB,KAAL,GAAakH,QAAQG,IAAR,GACT/F,SADS,GAET,KAAK8C,GAAL,EAFJ;;;;;;;;;6BASK;WACAsD,SAAL;UACMC,QAAQ,KAAKV,KAAnB;UACMjH,QAAQ,KAAKI,MAAL,CAAYS,IAAZ,CAAiB8G,KAAjB,EAAwBA,KAAxB,CAAd;UACI,KAAKT,OAAL,CAAaU,IAAjB,EAAuB;iBACZ5H,KAAT;;WAEG6H,QAAL;aACO7H,KAAP;;;;;;;;;gCAOW;UACPhB,MAAJ,GAAa,IAAb;;;;;;;;;;;2BASMiE,KAAK;UACLtE,KAAKsE,IAAItE,EAAf;UACI,CAAC,KAAK8I,SAAL,CAAe5F,GAAf,CAAmBlD,EAAnB,CAAL,EAA6B;aACtB8I,SAAL,CAAe1F,GAAf,CAAmBpD,EAAnB;aACK4I,OAAL,CAAazI,IAAb,CAAkBmE,GAAlB;YACI,CAAC,KAAKuE,MAAL,CAAY3F,GAAZ,CAAgBlD,EAAhB,CAAL,EAA0B;cACpBmJ,MAAJ,CAAW,IAAX;;;;;;;;;;;+BASM;UACN9I,MAAJ,GAAa,IAAb;UACIE,IAAI,KAAKoI,IAAL,CAAUlI,MAAlB;aACOF,GAAP,EAAY;YACJ+D,MAAM,KAAKqE,IAAL,CAAUpI,CAAV,CAAZ;YACI,CAAC,KAAKuI,SAAL,CAAe5F,GAAf,CAAmBoB,IAAItE,EAAvB,CAAL,EAAiC;cAC3BoJ,SAAJ,CAAc,IAAd;;;UAGAC,MAAM,KAAKR,MAAf;WACKA,MAAL,GAAc,KAAKC,SAAnB;WACKA,SAAL,GAAiBO,GAAjB;WACKP,SAAL,CAAezF,KAAf;YACM,KAAKsF,IAAX;WACKA,IAAL,GAAY,KAAKC,OAAjB;WACKA,OAAL,GAAeS,GAAf;WACKT,OAAL,CAAanI,MAAb,GAAsB,CAAtB;;;;;;;;;6BAOQ;UACJ,KAAK8H,OAAL,CAAaG,IAAjB,EAAuB;aAChBD,KAAL,GAAa,IAAb;OADF,MAEO,IAAI,KAAKF,OAAL,CAAae,IAAjB,EAAuB;aACvBtC,GAAL;OADK,MAEA;cACC,IAAN;;;;;;;;;;0BAQG;UACD,KAAKwB,MAAT,EAAiB;YACTnH,QAAQ,KAAKoE,GAAL,EAAd;YAEEpE,UAAU,KAAKA;;;WAGVc,SAASd,KAAT,KAAmB,KAAKkH,OAAL,CAAaU,IAJvC,EAKE;cACMhD,WAAW,KAAK5E,KAAtB;eACKA,KAAL,GAAaA,KAAb;eACKkB,QAAL,CAAcL,IAAd,CAAmB,KAAKoG,KAAxB,EAA+BjH,KAA/B,EAAsC4E,QAAtC;;;;;;;;;;;;+BAUM;;UAEJsD,UAAUxJ,IAAIM,MAApB;WACKgB,KAAL,GAAa,KAAKoE,GAAL,EAAb;WACKgD,KAAL,GAAa,KAAb;UACIpI,MAAJ,GAAakJ,OAAb;;;;;;;;;6BAOQ;UACJhJ,IAAI,KAAKoI,IAAL,CAAUlI,MAAlB;aACOF,GAAP,EAAY;aACLoI,IAAL,CAAUpI,CAAV,EAAasF,MAAb;;;;;;;;;;+BAQQ;UACN,KAAK2C,MAAT,EAAiB;YACXjI,IAAI,KAAKoI,IAAL,CAAUlI,MAAlB;eACOF,GAAP,EAAY;eACLoI,IAAL,CAAUpI,CAAV,EAAa6I,SAAb,CAAuB,IAAvB;;aAEGZ,MAAL,GAAc,KAAd;aACKF,KAAL,GAAa,KAAK/F,QAAL,GAAgB,KAAKlB,KAAL,GAAa,IAA1C;;;;;;;;;;;;;;;AAaN,SAASmI,QAAT,CAAmBnI,KAAnB,EAA0B;MACpBd,UAAJ;MAAOiC,aAAP;MACIb,QAAQN,KAAR,CAAJ,EAAoB;QACdA,MAAMZ,MAAV;WACOF,GAAP;eAAqBc,MAAMd,CAAN,CAAT;;GAFd,MAGO,IAAI4B,SAASd,KAAT,CAAJ,EAAqB;WACnBS,OAAOU,IAAP,CAAYnB,KAAZ,CAAP;QACImB,KAAK/B,MAAT;WACOF,GAAP;eAAqBc,MAAMmB,KAAKjC,CAAL,CAAN,CAAT;;;;;;;;;;;;;;;;;;AAiBhB,AAAO,SAASkJ,OAAT,CAAgBnB,KAAhB,EAAuBoB,oBAAvB,EAA6CnH,QAA7C,EAAuDgG,OAAvD,EAAgE;;MAE/D9G,SAASW,WAAWsH,oBAAX,IACAA,oBADA,GAEAC,MAAgBD,oBAAhB,CAFf;SAGO,IAAIrB,OAAJ,CAAYC,KAAZ,EAAmB7G,MAAnB,EAA2Bc,QAA3B,EAAqCgG,OAArC,CAAP;;;;;;;;;;AAUF,AAAO,SAASqB,YAAT,CAAuBtB,KAAvB,EAA8B7G,MAA9B,EAAsC;MACrCsF,UAAU,IAAIsB,OAAJ,CAAYC,KAAZ,EAAmB7G,MAAnB,EAA2B,IAA3B,EAAiC;UACzCyD,WAAQ+D,IADiC;UAEzC,IAFyC;UAGzC/D,WAAQoE;GAHA,CAAhB;SAKO,SAASO,cAAT,GAA2B;QAC5B9C,QAAQwB,OAAR,CAAgBG,IAAhB,IAAwB3I,IAAIM,MAA5B,IAAsC,CAACN,IAAIM,MAAJ,CAAWkI,OAAX,CAAmBG,IAA9D,EAAoE;cAC1DH,OAAR,CAAgBG,IAAhB,GAAuB,KAAvB;cACQnG,QAAR,GAAmB,YAAY;YACvBoG,OAAO5B,QAAQ4B,IAArB;aACK,IAAIpI,IAAI,CAAR,EAAWC,IAAImI,KAAKlI,MAAzB,EAAiCF,IAAIC,CAArC,EAAwCD,GAAxC,EAA6C;eACtCA,CAAL,EAAQgE,MAAR;;OAHJ;;QAOEwC,QAAQ0B,KAAZ,EAAmB;cACTqB,QAAR;;QAEE/J,IAAIM,MAAR,EAAgB;cACNwF,MAAR;;WAEKkB,QAAQ1F,KAAf;GAhBF;;;AC7NF;AACA6D,WAAQ6E,OAAR,GAAkBN,QAAlB;AACAvE,WAAQ+D,IAAR,GAAe/D,WAAQwD,IAAR,GAAexD,WAAQoE,IAAR,GAAe,KAA7C;;AAEAxH,OAAO6B,cAAP,CAAsBuB,UAAtB,EAA+B,EAAC8E,YAAD,EAAQC,gBAAR,EAAiBR,eAAjB,EAA/B;;;;;;;;;;;;;AAaA,AAAe,SAASvE,UAAT,CAAkB7E,MAAlB,EAA0BiG,UAA1B,EAAsCjE,IAAtC,EAA4CkG,OAA5C,EAAqD;MAC9D,CAAClI,OAAO8E,cAAP,CAAsBvE,sBAAtB,CAAL,EAAoD;SAC7CP,MAAL;;SAEK6E,WAAQ6E,OAAR,CAAgB1J,MAAhB,EAAwBiG,UAAxB,EAAoCjE,IAApC,EAA0CkG,OAA1C,CAAP;;;;;;;;;;;;AAYF,SAASyB,KAAT,CAAgBzB,OAAhB,EAAyBlI,MAAzB,EAAiC;MAC3BA,MAAJ,EAAY;QACN,CAACA,OAAO8E,cAAP,CAAsBvE,sBAAtB,CAAL,EAAoD;WAC7CP,MAAL;;GAFJ,MAIO;aACI,EAAT;SACKA,MAAL;;UAEM6J,OAAR,IAAmBC,aAAa9J,MAAb,EAAqBkI,QAAQ2B,OAA7B,CAAnB;UACQrC,IAAR,IAAgBuC,gBAAgB/J,MAAhB,EAAwBkI,QAAQV,IAAhC,CAAhB;UACQwC,QAAR,IAAoBC,kBAAkBjK,MAAlB,EAA0BkI,QAAQ8B,QAAlC,CAApB;UACQE,QAAR,IAAoBC,gBAAgBnK,MAAhB,EAAwBkI,QAAQgC,QAAhC,CAApB;SACOlK,MAAP;;;;;;;;;;;;;;;;;;AAkBF,SAAS4J,OAAT,CAAkB5J,MAAlB,EAA0BoK,IAA1B,EAAgCC,gBAAhC,EAAkDC,KAAlD,EAAyD;MACnD,CAACtK,OAAO8E,cAAP,CAAsBvE,sBAAtB,CAAL,EAAoD;SAC7CP,MAAL;;MAEEoB,eAAJ;MAAYC,eAAZ;MACIU,WAAWsI,gBAAX,CAAJ,EAAkC;aACvBC,UAAU,KAAV,GACCf,aAAavJ,MAAb,EAAqBqK,gBAArB,CADD,GAECA,iBAAiBE,IAAjB,CAAsB,IAAtB,CAFV;aAGSnI,IAAT;GAJF,MAKO;aACIiI,iBAAiBjF,GAAjB,GACCiF,iBAAiBC,KAAjB,KAA2B,KAA3B,IAAoCA,UAAU,KAA9C,GACEf,aAAavJ,MAAb,EAAqBqK,iBAAiBjF,GAAtC,CADF,GAEEiF,iBAAiBjF,GAAjB,CAAqBmF,IAArB,CAA0B,IAA1B,CAHH,GAICnI,IAJV;aAKSiI,iBAAiB1H,GAAjB,GAAuB0H,iBAAiB1H,GAAjB,CAAqB4H,IAArB,CAA0B,IAA1B,CAAvB,GAAyDnI,IAAlE;;iBAEapC,MAAf,EAAuBoK,IAAvB,EAA6BhJ,MAA7B,EAAqCC,MAArC;;;;;;;;;;;;;;;;;AAiBF,SAAS+H,QAAT,CAAgBpJ,MAAhB,EAAwBqJ,oBAAxB,EAA8CnH,QAA9C,EAA2E;MAAnBgG,OAAmB,uEAATrD,UAAS;;MACrE,CAAC7E,OAAO8E,cAAP,CAAsBvE,sBAAtB,CAAL,EAAoD;SAC7CP,MAAL;;SAEKwK,QAAQxK,MAAR,EAAgBqJ,oBAAhB,EAAsCnH,QAAtC,EAAgDgG,OAAhD,CAAP;;;;;;;;AAQF,SAASuC,IAAT,CAAezK,MAAf,EAAuB;cACTA,MAAZ,EAAoBO,sBAApB,EAA4C,EAA5C,EAAgD,KAAhD;cACYP,MAAZ,EAAoBQ,mBAApB,EAAyCiB,OAAOmB,MAAP,CAAc,IAAd,CAAzC,EAA8D,KAA9D;YACU5C,OAAOQ,mBAAP,CAAV;sBACoBR,MAApB;;;;;;;;;AASF,SAAS8J,YAAT,CAAuB9J,MAAvB,EAA+B6J,OAA/B,EAAwC;eACzBA,OAAb,EAAsB,UAACO,IAAD,EAAO7G,MAAP,EAAkB;WAC/B6G,IAAP,IAAe7G,OAAOgH,IAAP,CAAYvK,MAAZ,CAAf;GADF;;;;;;;;;;AAYF,SAAS0K,aAAT,CAAwB1K,MAAxB,EAAgC8C,GAAhC,EAAqC9B,KAArC,EAA4C;SACnCR,mBAAP,EAA4BsC,GAA5B,IAAmC9B,KAAnC;iBACehB,OAAOQ,mBAAP,CAAf,EAA4CsC,GAA5C,EAAiD9B,KAAjD;QACMhB,MAAN,EAAc8C,GAAd;;;;;;;;;AASF,SAASiH,eAAT,CAA0B/J,MAA1B,EAAkC2K,UAAlC,EAA8C;eAC/BA,UAAb,EAAyB,UAAC7H,GAAD,EAAM9B,KAAN;WAAgB0J,cAAc1K,MAAd,EAAsB8C,GAAtB,EAA2B9B,KAA3B,CAAhB;GAAzB;;;;;;;;AAQF,SAAS4J,mBAAT,CAA8B5K,MAA9B,EAAsC;eACvBA,MAAb,EAAqB,UAAC8C,GAAD,EAAM9B,KAAN,EAAgB;KAClCe,WAAWf,KAAX,CAAD,IAAsB0J,cAAc1K,MAAd,EAAsB8C,GAAtB,EAA2B9B,KAA3B,CAAtB;GADF;;;;;;;;;AAWF,SAASiJ,iBAAT,CAA4BjK,MAA5B,EAAoC2K,UAApC,EAAgD;eACjCA,UAAb,EAAyB,UAAC7H,GAAD,EAAM9B,KAAN;WAAgB4I,QAAQ5J,MAAR,EAAgB8C,GAAhB,EAAqB9B,KAArB,CAAhB;GAAzB;;;;;;;;;AASF,SAASmJ,eAAT,CAA0BnK,MAA1B,EAAkC2K,UAAlC,EAA8C;eAC/BA,UAAb,EAAyB,UAAC1E,UAAD,EAAa4E,gBAAb,EAAkC;QACrD9I,WAAW8I,gBAAX,CAAJ,EAAkC;eAC1B7K,MAAN,EAAciG,UAAd,EAA0B4E,gBAA1B;KADF,MAEO;eACC7K,MAAN,EAAciG,UAAd,EAA0B4E,iBAAiBnE,OAA3C,EAAoDmE,gBAApD;;GAJJ;;;;;;;;;AAeF,SAASC,KAAT,CAAgB9K,MAAhB,EAAwB8C,GAAxB,EAA6B;WAClB1B,MAAT,GAAmB;WACVpB,OAAOQ,mBAAP,EAA4BsC,GAA5B,CAAP;;WAEOzB,MAAT,CAAiBL,KAAjB,EAAwB;WACfR,mBAAP,EAA4BsC,GAA5B,IAAmC9B,KAAnC;;iBAEahB,MAAf,EAAuB8C,GAAvB,EAA4B1B,MAA5B,EAAoCC,MAApC;;;;;"}